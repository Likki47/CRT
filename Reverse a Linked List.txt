Reverse a Linked List

Problem:
Write a program to print the given list in reverse order. Get the input continuously from the user, until the user enters a negative value.

Input Format
Read elements upto -1

Constraints
1<=n<=10^7

Output Format
print output

Sample Input 0
4
2
3
1
6
-1
Sample Output 0
Original Order:
4 2 3 1 6
Reverse Order:
6 1 3 2 4

Sample Input 1
12
32
45
28
-1
Sample Output 1
Original Order:
12 32 45 28
Reverse Order:
28 45 32 12

Sample Input 2
-1
Sample Output 2
No value has been inserted





Program:
class node:
    def __init__(self,data):
        self.data=data
        self.left=None
        self.right=None
class double():
    def __init__(self):
        self.head=self.tail=None
    def create(self,data):
        n=node(data)
        if self.head==None:
            self.head=self.tail= n
        else:
            self.tail.right=n
            n.left=self.tail
            self.tail=n
    def show(self):
        if self.head==None:
            print("List is empty")
        temp=self.head
        while temp.right!=None :
            print(temp.data,end=" ")
            temp=temp.right
        print(temp.data)
    def reverse(self):
        if self.head==None:
            print("List is empty")
        temp=self.tail
        while temp.left!=None :
            print(temp.data,end=" ")
            temp=temp.left
        print(temp.data)
l1=double()
c=0
while True:
    x=int(input())
    if x==-1:
        break
    else:
        l1.create(x)
        c=c+1
if c>0:
    print("Original Order:")
    l1.show()
    print("Reverse Order:")
    l1.reverse()
else:
    print("No value has been inserted")